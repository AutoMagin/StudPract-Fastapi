{"ast":null,"code":"import axiosInstance from'./axiosInstance';export const userService={get:id=>axiosInstance.get(`/users/${id}`).then(response=>response.data),getUsers:function(){let skip=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let sortBy=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;let search=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;let url=`/users/?skip=${skip}&limit=${limit}`;if(sortBy)url+=`&sort_by=${sortBy}`;if(search)url+=`&search=${search}`;return axiosInstance.get(url).then(response=>response.data);},create:user=>axiosInstance.post(`/users/`,user).then(response=>response.data),update:(id,user)=>axiosInstance.put(`/users/${id}`,user).then(response=>response.data),delete:id=>axiosInstance.delete(`/users/${id}`).then(response=>response.data),login:credentials=>axiosInstance.post(`/users/login`,credentials).then(response=>response.data)};","map":{"version":3,"names":["axiosInstance","userService","get","id","then","response","data","getUsers","skip","arguments","length","undefined","limit","sortBy","search","url","create","user","post","update","put","delete","login","credentials"],"sources":["C:/Users/zo-al/Desktop/studa_practe/frontend/src/services/userService.js"],"sourcesContent":["import axiosInstance from './axiosInstance';\r\n\r\nexport const userService = {\r\n  get: (id) => axiosInstance.get(`/users/${id}`).then(response => response.data),\r\n  getUsers: (skip = 0, limit = 10, sortBy = null, search = null) => {\r\n    let url = `/users/?skip=${skip}&limit=${limit}`;\r\n    if (sortBy) url += `&sort_by=${sortBy}`;\r\n    if (search) url += `&search=${search}`;\r\n    return axiosInstance.get(url).then(response => response.data);\r\n  },\r\n  create: (user) => axiosInstance.post(`/users/`, user).then(response => response.data),\r\n  update: (id, user) => axiosInstance.put(`/users/${id}`, user).then(response => response.data),\r\n  delete: (id) => axiosInstance.delete(`/users/${id}`).then(response => response.data),\r\n  login: (credentials) => axiosInstance.post(`/users/login`, credentials).then(response => response.data),\r\n};"],"mappings":"AAAA,MAAO,CAAAA,aAAa,KAAM,iBAAiB,CAE3C,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzBC,GAAG,CAAGC,EAAE,EAAKH,aAAa,CAACE,GAAG,CAAC,UAAUC,EAAE,EAAE,CAAC,CAACC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAC9EC,QAAQ,CAAE,QAAAA,CAAA,CAAwD,IAAvD,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,IAAE,CAAAG,KAAK,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAAI,MAAM,CAAAJ,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,IAAE,CAAAK,MAAM,CAAAL,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAC3D,GAAI,CAAAM,GAAG,CAAG,gBAAgBP,IAAI,UAAUI,KAAK,EAAE,CAC/C,GAAIC,MAAM,CAAEE,GAAG,EAAI,YAAYF,MAAM,EAAE,CACvC,GAAIC,MAAM,CAAEC,GAAG,EAAI,WAAWD,MAAM,EAAE,CACtC,MAAO,CAAAd,aAAa,CAACE,GAAG,CAACa,GAAG,CAAC,CAACX,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/D,CAAC,CACDU,MAAM,CAAGC,IAAI,EAAKjB,aAAa,CAACkB,IAAI,CAAC,SAAS,CAAED,IAAI,CAAC,CAACb,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CACrFa,MAAM,CAAEA,CAAChB,EAAE,CAAEc,IAAI,GAAKjB,aAAa,CAACoB,GAAG,CAAC,UAAUjB,EAAE,EAAE,CAAEc,IAAI,CAAC,CAACb,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAC7Fe,MAAM,CAAGlB,EAAE,EAAKH,aAAa,CAACqB,MAAM,CAAC,UAAUlB,EAAE,EAAE,CAAC,CAACC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CACpFgB,KAAK,CAAGC,WAAW,EAAKvB,aAAa,CAACkB,IAAI,CAAC,cAAc,CAAEK,WAAW,CAAC,CAACnB,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CACxG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}