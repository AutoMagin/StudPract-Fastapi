{"ast":null,"code":"import React,{useState,useContext}from'react';import{postService}from'../services/postService';import{AuthContext}from'../contexts/AuthContext';import{Typography,Box,TextField,Button}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function CreatePost(_ref){let{userId,onPostCreated}=_ref;const{user}=useContext(AuthContext);const[title,setTitle]=useState('');const[content,setContent]=useState('');const[error,setError]=useState(null);const handleSubmit=async e=>{e.preventDefault();if(!user||user.id!==parseInt(userId)){setError('Вы можете создавать посты только от своего имени');return;}try{const newPost={title,content};await postService.createPost(userId,newPost);setTitle('');setContent('');setError(null);if(onPostCreated)onPostCreated();}catch(err){var _err$response,_err$response2,_err$response3,_err$response3$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.status)===403?'Неавторизованное действие':((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.status)===401?'Необходима авторизация':((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.detail)||err.message||'Ошибка при создании поста');}};return/*#__PURE__*/_jsxs(Box,{className:\"container\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"}),error&&/*#__PURE__*/_jsx(Typography,{color:\"error\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{label:\"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\",value:title,onChange:e=>setTitle(e.target.value),fullWidth:true,margin:\"normal\",required:true}),/*#__PURE__*/_jsx(TextField,{label:\"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435\",value:content,onChange:e=>setContent(e.target.value),fullWidth:true,margin:\"normal\",multiline:true,rows:4,required:true}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",fullWidth:true,style:{marginTop:'1rem'},children:\"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"})]})]});}","map":{"version":3,"names":["React","useState","useContext","postService","AuthContext","Typography","Box","TextField","Button","jsx","_jsx","jsxs","_jsxs","CreatePost","_ref","userId","onPostCreated","user","title","setTitle","content","setContent","error","setError","handleSubmit","e","preventDefault","id","parseInt","newPost","createPost","err","_err$response","_err$response2","_err$response3","_err$response3$data","response","status","data","detail","message","className","children","variant","gutterBottom","color","onSubmit","label","value","onChange","target","fullWidth","margin","required","multiline","rows","type","style","marginTop"],"sources":["C:/Users/zo-al/Desktop/studa_practe/frontend/src/components/CreatePost.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { postService } from '../services/postService';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport { Typography, Box, TextField, Button } from '@mui/material';\r\n\r\nexport function CreatePost({ userId, onPostCreated }) {\r\n  const { user } = useContext(AuthContext);\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!user || user.id !== parseInt(userId)) {\r\n      setError('Вы можете создавать посты только от своего имени');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const newPost = { title, content };\r\n      await postService.createPost(userId, newPost);\r\n      setTitle('');\r\n      setContent('');\r\n      setError(null);\r\n      if (onPostCreated) onPostCreated();\r\n    } catch (err) {\r\n      setError(\r\n        err.response?.status === 403\r\n          ? 'Неавторизованное действие'\r\n          : err.response?.status === 401\r\n          ? 'Необходима авторизация'\r\n          : err.response?.data?.detail || err.message || 'Ошибка при создании поста'\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className=\"container\">\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Создать пост\r\n      </Typography>\r\n      {error && <Typography color=\"error\">{error}</Typography>}\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Заголовок\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Содержание\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          multiline\r\n          rows={4}\r\n          required\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          style={{ marginTop: '1rem' }}\r\n        >\r\n          Опубликовать\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}