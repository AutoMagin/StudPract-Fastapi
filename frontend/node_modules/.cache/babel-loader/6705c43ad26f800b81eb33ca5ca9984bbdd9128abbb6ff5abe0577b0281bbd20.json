{"ast":null,"code":"import axiosInstance from './axiosInstance';\nexport const postService = {\n  getPosts(skip = 0, limit = 10) {\n    return axiosInstance.get(`/users/posts/?skip=${skip}&limit=${limit}`).then(response => response.data);\n  },\n  getPostsByUser(userId) {\n    return axiosInstance.get(`/users/${userId}/posts/`).then(response => response.data);\n  },\n  create(userId, post) {\n    return axiosInstance.post(`/users/${userId}/posts/`, post).then(response => response.data);\n  },\n  update(postId, post) {\n    return axiosInstance.put(`/users/posts/${postId}`, post).then(response => response.data);\n  },\n  delete(postId) {\n    return axiosInstance.delete(`/users/posts/${postId}`).then(response => response.data);\n  },\n  like(postId) {\n    return axiosInstance.post(`/users/posts/${postId}/like/`).then(response => response.data);\n  },\n  unlike(postId) {\n    return axiosInstance.delete(`/users/posts/${postId}/like/`).then(response => response.data);\n  }\n};","map":{"version":3,"names":["axiosInstance","postService","getPosts","skip","limit","get","then","response","data","getPostsByUser","userId","create","post","update","postId","put","delete","like","unlike"],"sources":["C:/Users/zo-al/Desktop/studa_practe/frontend/src/services/postService.js"],"sourcesContent":["import axiosInstance from './axiosInstance';\r\n\r\nexport const postService = {\r\n  getPosts(skip = 0, limit = 10) {\r\n    return axiosInstance.get(`/users/posts/?skip=${skip}&limit=${limit}`).then((response) => response.data);\r\n  },\r\n  getPostsByUser(userId) {\r\n    return axiosInstance.get(`/users/${userId}/posts/`).then((response) => response.data);\r\n  },\r\n  create(userId, post) {\r\n    return axiosInstance.post(`/users/${userId}/posts/`, post).then((response) => response.data);\r\n  },\r\n  update(postId, post) {\r\n    return axiosInstance.put(`/users/posts/${postId}`, post).then((response) => response.data);\r\n  },\r\n  delete(postId) {\r\n    return axiosInstance.delete(`/users/posts/${postId}`).then((response) => response.data);\r\n  },\r\n  like(postId) {\r\n    return axiosInstance.post(`/users/posts/${postId}/like/`).then((response) => response.data);\r\n  },\r\n  unlike(postId) {\r\n    return axiosInstance.delete(`/users/posts/${postId}/like/`).then((response) => response.data);\r\n  },\r\n};"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAE3C,OAAO,MAAMC,WAAW,GAAG;EACzBC,QAAQA,CAACC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAE;IAC7B,OAAOJ,aAAa,CAACK,GAAG,CAAC,sBAAsBF,IAAI,UAAUC,KAAK,EAAE,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EACzG,CAAC;EACDC,cAAcA,CAACC,MAAM,EAAE;IACrB,OAAOV,aAAa,CAACK,GAAG,CAAC,UAAUK,MAAM,SAAS,CAAC,CAACJ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EACvF,CAAC;EACDG,MAAMA,CAACD,MAAM,EAAEE,IAAI,EAAE;IACnB,OAAOZ,aAAa,CAACY,IAAI,CAAC,UAAUF,MAAM,SAAS,EAAEE,IAAI,CAAC,CAACN,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAC9F,CAAC;EACDK,MAAMA,CAACC,MAAM,EAAEF,IAAI,EAAE;IACnB,OAAOZ,aAAa,CAACe,GAAG,CAAC,gBAAgBD,MAAM,EAAE,EAAEF,IAAI,CAAC,CAACN,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAC5F,CAAC;EACDQ,MAAMA,CAACF,MAAM,EAAE;IACb,OAAOd,aAAa,CAACgB,MAAM,CAAC,gBAAgBF,MAAM,EAAE,CAAC,CAACR,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EACzF,CAAC;EACDS,IAAIA,CAACH,MAAM,EAAE;IACX,OAAOd,aAAa,CAACY,IAAI,CAAC,gBAAgBE,MAAM,QAAQ,CAAC,CAACR,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAC7F,CAAC;EACDU,MAAMA,CAACJ,MAAM,EAAE;IACb,OAAOd,aAAa,CAACgB,MAAM,CAAC,gBAAgBF,MAAM,QAAQ,CAAC,CAACR,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAC/F;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}