{"ast":null,"code":"// frontend/src/services/postService.js\nimport axiosInstance from './axiosInstance';\nexport const postService = {\n  createPost(userId, post) {\n    return axiosInstance.post(`/users/${userId}/posts/`, post).then(response => response.data);\n  },\n  getPosts(skip = 0, limit = 10) {\n    return axiosInstance.get(`/users/posts/?skip=${skip}&limit=${limit}`).then(response => response.data);\n  },\n  getPostsByUser(userId) {\n    return axiosInstance.get(`/users/${userId}/posts/`).then(response => response.data);\n  },\n  getPost(postId) {\n    return axiosInstance.get(`/users/posts/${postId}`).then(response => response.data);\n  },\n  updatePost(postId, post) {\n    return axiosInstance.put(`/users/posts/${postId}`, post).then(response => response.data);\n  },\n  deletePost(postId) {\n    return axiosInstance.delete(`/users/posts/${postId}`).then(response => response.data);\n  },\n  likePost(postId) {\n    return axiosInstance.post(`/users/posts/${postId}/like/`).then(response => response.data);\n  },\n  unlikePost(postId) {\n    return axiosInstance.delete(`/users/posts/${postId}/like/`).then(response => response.data);\n  }\n};","map":{"version":3,"names":["axiosInstance","postService","createPost","userId","post","then","response","data","getPosts","skip","limit","get","getPostsByUser","getPost","postId","updatePost","put","deletePost","delete","likePost","unlikePost"],"sources":["C:/Users/zo-al/Desktop/studa_practe/frontend/src/services/postService.js"],"sourcesContent":["// frontend/src/services/postService.js\r\nimport axiosInstance from './axiosInstance';\r\n\r\nexport const postService = {\r\n  createPost(userId, post) {\r\n    return axiosInstance.post(`/users/${userId}/posts/`, post).then((response) => response.data);\r\n  },\r\n  getPosts(skip = 0, limit = 10) {\r\n    return axiosInstance.get(`/users/posts/?skip=${skip}&limit=${limit}`).then((response) => response.data);\r\n  },\r\n  getPostsByUser(userId) {\r\n    return axiosInstance.get(`/users/${userId}/posts/`).then((response) => response.data);\r\n  },\r\n  getPost(postId) {\r\n    return axiosInstance.get(`/users/posts/${postId}`).then((response) => response.data);\r\n  },\r\n  updatePost(postId, post) {\r\n    return axiosInstance.put(`/users/posts/${postId}`, post).then((response) => response.data);\r\n  },\r\n  deletePost(postId) {\r\n    return axiosInstance.delete(`/users/posts/${postId}`).then((response) => response.data);\r\n  },\r\n  likePost(postId) {\r\n    return axiosInstance.post(`/users/posts/${postId}/like/`).then((response) => response.data);\r\n  },\r\n  unlikePost(postId) {\r\n    return axiosInstance.delete(`/users/posts/${postId}/like/`).then((response) => response.data);\r\n  },\r\n};"],"mappings":"AAAA;AACA,OAAOA,aAAa,MAAM,iBAAiB;AAE3C,OAAO,MAAMC,WAAW,GAAG;EACzBC,UAAUA,CAACC,MAAM,EAAEC,IAAI,EAAE;IACvB,OAAOJ,aAAa,CAACI,IAAI,CAAC,UAAUD,MAAM,SAAS,EAAEC,IAAI,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAC9F,CAAC;EACDC,QAAQA,CAACC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAE;IAC7B,OAAOV,aAAa,CAACW,GAAG,CAAC,sBAAsBF,IAAI,UAAUC,KAAK,EAAE,CAAC,CAACL,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EACzG,CAAC;EACDK,cAAcA,CAACT,MAAM,EAAE;IACrB,OAAOH,aAAa,CAACW,GAAG,CAAC,UAAUR,MAAM,SAAS,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EACvF,CAAC;EACDM,OAAOA,CAACC,MAAM,EAAE;IACd,OAAOd,aAAa,CAACW,GAAG,CAAC,gBAAgBG,MAAM,EAAE,CAAC,CAACT,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EACtF,CAAC;EACDQ,UAAUA,CAACD,MAAM,EAAEV,IAAI,EAAE;IACvB,OAAOJ,aAAa,CAACgB,GAAG,CAAC,gBAAgBF,MAAM,EAAE,EAAEV,IAAI,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAC5F,CAAC;EACDU,UAAUA,CAACH,MAAM,EAAE;IACjB,OAAOd,aAAa,CAACkB,MAAM,CAAC,gBAAgBJ,MAAM,EAAE,CAAC,CAACT,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EACzF,CAAC;EACDY,QAAQA,CAACL,MAAM,EAAE;IACf,OAAOd,aAAa,CAACI,IAAI,CAAC,gBAAgBU,MAAM,QAAQ,CAAC,CAACT,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAC7F,CAAC;EACDa,UAAUA,CAACN,MAAM,EAAE;IACjB,OAAOd,aAAa,CAACkB,MAAM,CAAC,gBAAgBJ,MAAM,QAAQ,CAAC,CAACT,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;EAC/F;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}